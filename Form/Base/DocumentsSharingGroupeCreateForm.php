<?php
/**
* This class has been generated by TheliaStudio
* For more information, see https://github.com/thelia-modules/TheliaStudio
*/

namespace DocumentsSharing\Form\Base;

use DocumentsSharing\DocumentsSharing;
use Thelia\Form\BaseForm;
use Symfony\Component\Validator\Constraints\NotBlank;
use Thelia\Model\CustomerQuery;

/**
 * Class DocumentsSharingGroupeCreateForm
 * @package DocumentsSharing\Form\Base
 * @author TheliaStudio
 */
class DocumentsSharingGroupeCreateForm extends BaseForm
{
    const FORM_NAME = "documents_sharing_groupe_create";

    public function buildForm()
    {
        $translationKeys = $this->getTranslationKeys();
        $fieldsIdKeys = $this->getFieldsIdKeys();

        $this->addTitleField($translationKeys, $fieldsIdKeys);
        $this->addCustomerIdField($translationKeys, $fieldsIdKeys);
    }


    protected function addTitleField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder->add("title", "text", array(
            "label" => $this->translator->trans($this->readKey("title", $translationKeys), [], DocumentsSharing::MESSAGE_DOMAIN),
            "label_attr" => ["for" => $this->readKey("title", $fieldsIdKeys)],
            "required" => true,
            "constraints" => array(
                new NotBlank(),
            ),
            "attr" => array(
            )
        ));
    }

    protected function addCustomerIdField(array $translationKeys, array $fieldsIdKeys)
    {
        $this->formBuilder->add("customer_id", "choice", array(
            "label" => $this->translator->trans($this->readKey("customer_id", $translationKeys), [], DocumentsSharing::MESSAGE_DOMAIN),
            "label_attr" => ["for" => $this->readKey("customer_id", $fieldsIdKeys)],
            "required" => true,
            "multiple" => true,
            'choices' => $this->getCustomerList(),
            "constraints" => array(
                new NotBlank(),
            ),
            "attr" => array(
            )
        ));
    }

    public function getCustomerList()
    {
        $customerList = array();
        $customer = CustomerQuery::create()->orderByLastname()->orderByFirstname();
        foreach($customer as $value)
        {
            $key = $value->getFirstName().' '.$value->getLastName();
            $customerList[$value->getId()] = $key;
        }
        return $customerList;
    }

    public function getName()
    {
        return static::FORM_NAME;
    }

    public function readKey($key, array $keys, $default = '')
    {
        if (isset($keys[$key])) {
            return $keys[$key];
        }

        return $default;
    }

    public function getTranslationKeys()
    {
        return array();
    }

    public function getFieldsIdKeys()
    {
        return array(
            "title" => "documents_sharing_groupe_title",
            "customer_id" => "documents_sharing_groupe_customer_id",
        );
    }
}
